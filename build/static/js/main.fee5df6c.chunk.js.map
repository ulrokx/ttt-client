{"version":3,"sources":["socket/socket.ts","styled/colors.ts","styled/BoardWrapper.tsx","styled/Button.tsx","styled/FlexDiv.tsx","styled/Text.tsx","utils/UserContext.tsx","styled/TextInput.tsx","components/JoinGameTexts.tsx","styled/Tile.tsx","components/square.tsx","components/Gameboard.tsx","styled/Lists.tsx","components/MessageArea.tsx","components/RightArea.tsx","styled/LayoutColumns.tsx","styled/PageWrapper.tsx","App.tsx","index.tsx"],"names":["socketlink","console","log","socket","io","autoConnect","on","colors","lightblue","darkerblue","hoverblue","black","orange","bbackground","hoverorange","BoardWrapper","styled","div","Button","button","FlexDiv","TitleText","h1","StandardText","h2","UserContext","createContext","undefined","UserContextProvider","children","useState","messages","setMessages","users","setUsers","auth","setAuth","position","setPosition","currentUser","setCurrentUser","useEffect","Provider","value","updateCurrentUser","user","updatePosition","msg","updateMessages","newMsg","slice","push","updateUsers","updateAuth","TextInput","input","JoinGameTexts","useContext","name","setName","roomCode","setRoomCode","response","setResponse","arg","username","onChange","v","target","placeholder","onClick","e","emit","nick","room","Tile","props","line","SquareTile","display","press","id","isLine","size","lines","Gameboard","Array","fill","boardState","setBoardState","waiting","setWaiting","turn","setTurn","turnCount","setTurnCount","tie","setTie","winner","setWinner","liney","setLiney","playing","setPlaying","letter","setLetter","checkWin","useCallback","board","forEach","start","move","first","newState","includes","from","length","_","i","map","handleClick","UserList","ul","UserItem","li","MessageBox","MessageArea","sendMessage","sender","preventDefault","setMsg","onSubmit","style","height","type","reverse","m","RightArea","list","u","LayoutColumns","PageWrapper","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee5df6c.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\r\nlet socketlink = \"\";\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    socketlink = \"http://localhost:4000\"\r\n} else {\r\n    socketlink = \"https://arcane-fjord-05208.herokuapp.com/\"\r\n}\r\nconsole.log(socketlink)\r\nexport const socket = io(socketlink, {autoConnect: true})\r\n\r\nsocket.on(\"connect\", () => {\r\n    console.log(\"connected\")\r\n})\r\n","const colors = {\r\n    lightblue: \"#A9EBFF\",\r\n    darkerblue: \"#4B9EFD\",\r\n    hoverblue: \"#86BDFC\",\r\n    black: \"#00171E\",\r\n    orange: \"#FFD390\",\r\n    bbackground: \"#D8FFDD\",\r\n    hoverorange: \"#FFC670\"\r\n\r\n}\r\n\r\nexport default colors","import styled from 'styled-components'\r\nimport colors from './colors'\r\n\r\nexport const BoardWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n    gap: 1em 1em;\r\n    background: ${colors.bbackground};\r\n    padding: 4em 4em;\r\n    border-radius: 5%;\r\n`","import styled from \"styled-components\";\r\nimport colors from \"./colors\";\r\n\r\n\r\nexport const Button = styled.button`\r\nbackground-color: ${colors.lightblue};\r\nborder-radius: 15px;\r\nfont-size: 1.4em;\r\npadding: 10px 40px;\r\n\r\n`","import styled from \"styled-components\";\r\n\r\nexport const FlexDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const TitleText = styled.h1`\r\nfont-weight: bold;\r\n`\r\n\r\nexport const StandardText = styled.h2`\r\nfont-weight: bold\r\n`","import { createContext, useEffect, useState } from \"react\";\r\n\r\ninterface UserContextInteface {\r\n    messages: Array<string>\r\n    users: Array<string>\r\n    auth: boolean\r\n    position: null | 0 | 1\r\n    currentUser: string | null\r\n    updateMessages: (msg: string) => void\r\n    updateUsers: (msg: Array<string>) => void\r\n    updateAuth: (msg: string) => void\r\n    updatePosition: (msg: 0 | 1) => void\r\n    updateCurrentUser: (user: string) => void\r\n}\r\n    export const UserContext = createContext<UserContextInteface>(undefined as any);\r\n\r\nexport const UserContextProvider: React.FC = ({children}) => {\r\n    const [messages, setMessages] = useState<Array<string>>([]);\r\n    const [users, setUsers] = useState<Array<string>>([]);\r\n    const [auth, setAuth] = useState(false)\r\n    const [position, setPosition] = useState<0 | 1| null>(null)\r\n    const [currentUser, setCurrentUser] = useState<string | null>(null)\r\n    const updateMessages = (msg: string) => {\r\n        const newMsg = messages.slice();\r\n        newMsg.push(msg);\r\n        setMessages(newMsg);\r\n    };\r\n\r\n    const updateUsers = (msg: Array<string>) => {\r\n        setUsers(msg);\r\n    };\r\n\r\n    const updateAuth = (msg: string) => {\r\n        setAuth(msg === \"true\" ? true : false)\r\n    }\r\n\r\n    const updatePosition = (msg: 1 | 0) => {\r\n        setPosition(msg);\r\n    }\r\n\r\n    const updateCurrentUser = (user: string) => {\r\n        setCurrentUser(user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(users)\r\n    }, [users])\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{ currentUser: currentUser, updateCurrentUser, users: users, messages: messages, auth: auth, position: position, updatePosition, updateMessages, updateUsers, updateAuth }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport colors from \"./colors\";\r\n\r\nexport const TextInput = styled.input`\r\nfont-size: 1.4em;\r\npadding: .5em 1em;\r\nborder-radius: 25px;\r\nborder-width: 2px;\r\nborder-color: ${colors.darkerblue};\r\nwidth: 14em;\r\n`","import React, { useContext, useEffect, useState } from 'react'\r\nimport { socket } from '../socket/socket';\r\nimport { Button } from '../styled/Button';\r\nimport { FlexDiv } from '../styled/FlexDiv';\r\nimport { StandardText } from '../styled/Text';\r\nimport { TextInput } from '../styled/TextInput';\r\nimport { UserContext } from '../utils/UserContext';\r\n\r\ninterface JoinGameTextsProps {\r\n\r\n}\r\n\r\nexport const JoinGameTexts: React.FC<JoinGameTextsProps> = () => {\r\n\r\n    const {auth, updatePosition, updateCurrentUser} = useContext(UserContext)\r\n    const [name, setName] = useState(\"\")\r\n    const [roomCode, setRoomCode] = useState(\"\")\r\n    const [response, setResponse] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n    socket.on(\"game:join:good\", (arg) => {\r\n        setResponse(arg.msg)\r\n        updatePosition(arg.position)\r\n        updateCurrentUser(arg.username)\r\n    })\r\n}, [updateCurrentUser, updatePosition])\r\n\r\n        return (\r\n<>\r\n            {!auth ? <> <FlexDiv>\r\n                <TextInput value={name} onChange={(v) => setName(v.target.value)} placeholder=\"your name\"/>\r\n                <Button onClick={(e) => {\r\n                    socket.emit(\"game:join\", {nick: name, room: roomCode})\r\n                }}>Connect</Button>\r\n            </FlexDiv>\r\n                <TextInput value={roomCode} onChange={(v) => setRoomCode(v.target.value)} placeholder=\"room code\"/> </>: null}\r\n                <StandardText>{response}</StandardText>\r\n                </>\r\n        );\r\n}","import styled from \"styled-components\";\r\nimport colors from \"./colors\";\r\n\r\ninterface TileProps {\r\n    line?: boolean;\r\n}\r\n\r\nexport const Tile = styled.button<TileProps>`\r\n    flex: 0.33;\r\n    width: 10em;\r\n    height: 10em;\r\n    background: ${props => !props.line ?colors.lightblue : colors.orange};\r\n    border-radius: 8%;\r\n    border-width: 0;\r\n    box-shadow: 5px 5px 3px grey;\r\n\r\n\r\n    &:hover {\r\n        background: ${props => !props.line ? colors.hoverblue : colors.hoverorange}\r\n    }\r\n\r\n    \r\n    &:active {\r\n        background: ${colors.darkerblue}\r\n    }\r\n\r\n`;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { BsCircle } from \"react-icons/bs\";\r\nimport { Tile } from \"../styled/Tile\";\r\n\r\ninterface SquareProps {\r\n    display: \"x\" | \"o\" | null\r\n    id: number\r\n    press: MouseEventHandler\r\n    isLine: boolean\r\n}\r\n\r\nconst SquareTile: React.FC<SquareProps> = ({ display, id: _, press, isLine }) => {\r\n    return (\r\n            <Tile onClick={press} line={isLine}>\r\n                {display === \"x\" ? (\r\n                    <ImCross size=\"8em\"/>\r\n                ) : display === \"o\" ? (\r\n                    <BsCircle size=\"8em\"/>\r\n                ) : null}\r\n            </Tile>\r\n    );\r\n};\r\n\r\nexport default SquareTile\r\n","import React, {\r\n    useCallback,\r\n    useContext,\r\n    useEffect, useState\r\n} from \"react\";\r\nimport { socket } from \"../socket/socket\";\r\nimport { BoardWrapper } from \"../styled/BoardWrapper\";\r\nimport { Button } from \"../styled/Button\";\r\nimport { FlexDiv } from \"../styled/FlexDiv\";\r\nimport { StandardText } from \"../styled/Text\";\r\nimport { UserContext } from \"../utils/UserContext\";\r\nimport { JoinGameTexts } from \"./JoinGameTexts\";\r\nimport SquareTile from \"./square\";\r\n\r\n// const initialState = {\r\n//     boardState: Array(10).fill(null),\r\n//     isXnext: true,\r\n//     turnCount: 0,\r\n//     waitingForAgain: false,\r\n//     winner: \"\",\r\n//     winningLine: [],\r\n//     canMove: false\r\n// }\r\n\r\n// type StateType = typeof initialState;\r\nconst lines = [\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [3, 6, 9],\r\n    [1, 2, 3],\r\n    [4, 5, 6],\r\n    [7, 8, 9],\r\n    [1, 5, 9],\r\n    [3, 5, 7],\r\n];\r\n\r\n// type ActionType = any\r\n\r\n// const reducer: Reducer<StateType, ActionType> = (state: StateType, action) => {\r\n\r\n// }\r\n\r\nexport const Gameboard: React.FC = () => {\r\n    const { position } = useContext(UserContext);\r\n\r\n    // const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [boardState, setBoardState] = useState(Array(10).fill(null));\r\n\r\n    const [waiting, setWaiting] = useState(false);\r\n\r\n    const [turn, setTurn] = useState(\"x\");\r\n\r\n    const [turnCount, setTurnCount] = useState(0);\r\n\r\n    const [tie, setTie] = useState(false);\r\n\r\n    const [winner, setWinner] = useState<null | string>(null);\r\n\r\n    const [liney, setLiney] = useState<Array<number> | null>();\r\n\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const [letter, setLetter] = useState<null | \"x\" | \"o\">(null);\r\n\r\n    const checkWin = useCallback((board: Array<string>[] | any) => {\r\n        setTurnCount(turnCount + 1);\r\n        console.log(\"checking for win\", board);\r\n        lines.forEach((line) => {\r\n            if (\r\n                board[line[0]] === board[line[1]] &&\r\n                board[line[1]] === board[line[2]] &&\r\n                board[line[0]] !== null\r\n            ) {\r\n                console.log(\"board condieitons met\")\r\n                setWinner(board[line[0]]);\r\n                setPlaying(false);\r\n                setLiney(line);\r\n            } else if (turnCount > 9) {\r\n                setTie(true);\r\n                setPlaying(false);\r\n            }\r\n        });\r\n    }, [turnCount])\r\n\r\n    const handleClick = (id: number) => {\r\n        // we don't mutate around here -_-\r\n        if (!playing) return;\r\n        if (letter !== turn) return;\r\n        if (winner !== null) return;\r\n        const newState = boardState.slice();\r\n        newState[id] = turn;\r\n        setBoardState(newState);\r\n        setTurn(turn === \"x\" ? \"o\" : \"x\");\r\n        socket.emit(\"clientmove\", { id: id });\r\n        checkWin(newState);\r\n    };\r\nuseEffect(() => {\r\n    socket.on(\"game\", (arg) => {\r\n        setPlaying(arg.start);\r\n        setTurn(arg.move);\r\n        setLetter(arg.first === position ? \"x\" : \"o\");\r\n    });\r\n\r\n    socket.on(\"servermove\", (arg) => {\r\n        console.log(\"servermove\")\r\n        setTurn(turn === \"x\" ? \"o\" : \"x\");\r\n        const newState = boardState.slice();\r\n        newState[arg.id] = letter === \"x\" ? \"o\" : \"x\";\r\n        setBoardState(newState);\r\n        checkWin(newState);\r\n    });\r\n\r\n    socket.on(\"playagain\", (arg) => {\r\n        setBoardState(Array(10).fill(null));\r\n        setWaiting(false);\r\n        setTurn(\"x\");\r\n        setTurnCount(0);\r\n        setTie(false);\r\n        setWinner(null);\r\n        setLiney(null);\r\n        setPlaying(true);\r\n        setLetter(arg.first === position ? \"x\" : \"o\");\r\n    });\r\n}, [boardState, checkWin, letter, position, turn])\r\n\r\n    return (\r\n        <>\r\n            {playing ? (\r\n                <StandardText>\r\n                    it is {turn} turn to play, you are {letter}\r\n                </StandardText>\r\n            ) : winner ? (\r\n                <StandardText>{winner} is the winner!!</StandardText>\r\n            ) : tie ? (\r\n                <StandardText>it's a tie :|</StandardText>\r\n            ) : waiting ? (\r\n                <StandardText>waiting for other player...</StandardText>\r\n            ) : null}\r\n            {!playing && boardState.includes(\"x\") ? (\r\n                <Button\r\n                    onClick={() => {\r\n                        socket.emit(\"game:again\");\r\n                        setWaiting(true);\r\n                    }}\r\n                >\r\n                    play again\r\n                </Button>\r\n            ) : null}\r\n            <BoardWrapper>\r\n                {Array.from({ length: 9 }, (_, i) => i + 1).map(\r\n                    (id: number, i) => (\r\n                        <SquareTile\r\n                            key={i}\r\n                            isLine={!!liney?.includes(id)}\r\n                            id={id}\r\n                            display={boardState[id]}\r\n                            press={() => {\r\n                                if (boardState[id] !== null) return;\r\n                                handleClick(id);\r\n                            }}\r\n                        />\r\n                    )\r\n                )}\r\n            </BoardWrapper>\r\n            <JoinGameTexts />\r\n            <FlexDiv></FlexDiv>\r\n        </>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.ul`\r\nfont-size: 1em;\r\n`\r\n\r\nexport const UserItem = styled.li`\r\nfont-size: 1em;\r\n`","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { socket } from \"../socket/socket\";\r\nimport { Button } from \"../styled/Button\";\r\nimport { FlexDiv } from \"../styled/FlexDiv\";\r\nimport { StandardText } from \"../styled/Text\";\r\nimport { TextInput } from \"../styled/TextInput\";\r\nimport { UserContext } from \"../utils/UserContext\";\r\n\r\nconst MessageBox = styled.div`\r\n    overflow-y: auto;\r\n    flex-direction: column;\r\n    height: 500px;\r\n`;\r\n\r\nexport const MessageArea: React.FC = () => {\r\n    const { currentUser } = useContext(UserContext);\r\n    useEffect(() => {}, [currentUser]);\r\n    const sendMessage = (e: any) => {\r\n        console.log(\"sending message, \", { msg: msg, sender: currentUser });\r\n        e.preventDefault();\r\n        socket.emit(\"messagesend\", {\r\n            msg: msg,\r\n            sender: currentUser,\r\n        });\r\n        setMsg(\"\");\r\n        setMessages([{ msg: msg, sender: currentUser }, ...messages ]);\r\n    };\r\n    const [messages, setMessages] = useState<any>([]);\r\n    const [msg, setMsg] = useState(\"\");\r\n    useEffect(() => {\r\n    socket.on(\"messagerec\", (arg) => {\r\n        setMessages([...messages, arg]);\r\n    });\r\n}, [messages]);\r\n    if (!currentUser) return null;\r\n    return (\r\n        <>\r\n            <FlexDiv>\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        sendMessage(e);\r\n                    }}\r\n                >\r\n                    <TextInput\r\n                        name=\"message\"\r\n                        style={{ height: \"1.5em\" }}\r\n                        onChange={(v) => setMsg(v.target.value)}\r\n                        onSubmit={sendMessage}\r\n                        value={msg}\r\n                    />\r\n                    <Button onClick={sendMessage} type=\"submit\">\r\n                        Send\r\n                    </Button>\r\n                </form>\r\n            </FlexDiv>\r\n            <MessageBox>\r\n                {messages.reverse().map(\r\n                    (\r\n                        m: {\r\n                            sender: string\r\n                            msg: string\r\n                        },\r\n                        id: React.Key | null | undefined\r\n                    ) => (\r\n                        <StandardText key={id}>\r\n                            {m.sender}: {m.msg}\r\n                        </StandardText>\r\n                    )\r\n                )}\r\n            </MessageBox>\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { socket } from '../socket/socket';\r\nimport { UserItem, UserList } from '../styled/Lists';\r\nimport { TitleText } from '../styled/Text';\r\nimport { UserContext } from '../utils/UserContext';\r\nimport { MessageArea } from './MessageArea';\r\n\r\ninterface RightAreaProps {\r\n\r\n}\r\n\r\nexport const RightArea: React.FC<RightAreaProps> = () => {\r\n    const {users, updateUsers, updateAuth} = useContext(UserContext)\r\n\r\n    useEffect(() =>   {  socket.on(\"game:users:list\", (arg) => {\r\n        console.log(\"joined,\", arg)\r\n        updateAuth(arg.auth)\r\n        updateUsers(arg.list)\r\n    })\r\n\r\n    }, [updateUsers, updateAuth]);\r\n\r\n\r\n        return (<>\r\n            {users.length > 0 ? <TitleText>Connected users:</TitleText> : null}\r\n            <UserList>\r\n            {users?.map((u, i)  => {\r\n            return    <UserItem key={i}>{u}</UserItem>\r\n            })}\r\n            </UserList>\r\n            <MessageArea />\r\n            </>\r\n        );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const LayoutColumns = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 1em 5em;\r\nflex: 1;\r\njustify-content: space-between;\r\n\r\n@media(max-width: 1000px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n}\r\n`","import styled from \"styled-components\";\r\n\r\nexport const PageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* padding: 5% 30%; */\r\n    align-content: center;\r\n    justify-content: flex-start;\r\n    padding: 12px\r\n`;\r\n","import { Gameboard } from \"./components/Gameboard\";\nimport { RightArea } from \"./components/RightArea\";\nimport { LayoutColumns } from \"./styled/LayoutColumns\";\nimport { PageWrapper } from \"./styled/PageWrapper\";\nimport { TitleText } from \"./styled/Text\";\nimport { UserContextProvider } from \"./utils/UserContext\";\nfunction App() {\n    return (\n        <div className=\"App\">\n          <UserContextProvider>\n            <LayoutColumns>\n                <PageWrapper>\n                    <TitleText>Tic-Tac-Toe</TitleText>\n                    <Gameboard />\n                </PageWrapper>\n                <PageWrapper>\n                  <RightArea />\n                </PageWrapper>\n            </LayoutColumns>\n            </UserContextProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}