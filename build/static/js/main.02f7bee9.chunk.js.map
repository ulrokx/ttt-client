{"version":3,"sources":["socket/socket.ts","styled/colors.ts","styled/BoardWrapper.tsx","styled/FlexDiv.tsx","styled/Text.tsx","utils/UserContext.tsx","styled/Button.tsx","styled/TextInput.tsx","components/JoinGameTexts.tsx","styled/Tile.tsx","components/square.tsx","components/Gameboard.tsx","styled/Lists.tsx","components/MessageArea.tsx","components/RightArea.tsx","styled/LayoutColumns.tsx","styled/PageWrapper.tsx","App.tsx","index.tsx"],"names":["socket","io","autoConnect","on","console","log","colors","lightblue","darkerblue","hoverblue","black","orange","bbackground","hoverorange","BoardWrapper","styled","div","FlexDiv","TitleText","h1","StandardText","h2","UserContext","createContext","undefined","UserContextProvider","children","useState","messages","setMessages","users","setUsers","auth","setAuth","position","setPosition","currentUser","setCurrentUser","useEffect","Provider","value","updateCurrentUser","user","updatePosition","msg","updateMessages","newMsg","slice","push","updateUsers","updateAuth","Button","button","TextInput","input","JoinGameTexts","useContext","name","setName","roomCode","setRoomCode","response","setResponse","arg","username","onChange","v","target","placeholder","onClick","e","emit","nick","room","Tile","props","line","SquareTile","display","press","id","isLine","size","lines","Gameboard","Array","fill","boardState","setBoardState","turn","setTurn","winner","setWinner","liney","setLiney","playing","setPlaying","letter","setLetter","board","forEach","start","move","first","newState","from","length","_","i","map","includes","handleClick","UserList","ul","UserItem","li","MessageBox","MessageArea","sendMessage","sender","preventDefault","setMsg","onSubmit","style","height","type","m","RightArea","list","u","LayoutColumns","PageWrapper","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f7bee9.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\r\n\r\nexport const socket = io(\"https://arcane-fjord-05208.herokuapp.com/\", {autoConnect: true})\r\n\r\nsocket.on(\"connect\", () => {\r\n    console.log(\"connected\")\r\n})\r\n","const colors = {\r\n    lightblue: \"#A9EBFF\",\r\n    darkerblue: \"#4B9EFD\",\r\n    hoverblue: \"#86BDFC\",\r\n    black: \"#00171E\",\r\n    orange: \"#FFD390\",\r\n    bbackground: \"#D8FFDD\",\r\n    hoverorange: \"#FFC670\"\r\n\r\n}\r\n\r\nexport default colors","import styled from 'styled-components'\r\nimport colors from './colors'\r\n\r\nexport const BoardWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n    gap: 1em 1em;\r\n    background: ${colors.bbackground};\r\n    padding: 4em 4em;\r\n    border-radius: 5%;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const FlexDiv = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const TitleText = styled.h1`\r\nfont-weight: bold;\r\n`\r\n\r\nexport const StandardText = styled.h2`\r\nfont-weight: bold\r\n`","import { createContext, useEffect, useState } from \"react\";\r\n\r\ninterface UserContextInteface {\r\n    messages: Array<string>\r\n    users: Array<string>\r\n    auth: boolean\r\n    position: null | 0 | 1\r\n    currentUser: string | null\r\n    updateMessages: (msg: string) => void\r\n    updateUsers: (msg: Array<string>) => void\r\n    updateAuth: (msg: string) => void\r\n    updatePosition: (msg: 0 | 1) => void\r\n    updateCurrentUser: (user: string) => void\r\n}\r\n    export const UserContext = createContext<UserContextInteface>(undefined as any);\r\n\r\nexport const UserContextProvider: React.FC = ({children}) => {\r\n    const [messages, setMessages] = useState<Array<string>>([]);\r\n    const [users, setUsers] = useState<Array<string>>([]);\r\n    const [auth, setAuth] = useState(false)\r\n    const [position, setPosition] = useState<0 | 1| null>(null)\r\n    const [currentUser, setCurrentUser] = useState<string | null>(null)\r\n    const updateMessages = (msg: string) => {\r\n        const newMsg = messages.slice();\r\n        newMsg.push(msg);\r\n        setMessages(newMsg);\r\n    };\r\n\r\n    const updateUsers = (msg: Array<string>) => {\r\n        setUsers(msg);\r\n    };\r\n\r\n    const updateAuth = (msg: string) => {\r\n        setAuth(msg === \"true\" ? true : false)\r\n    }\r\n\r\n    const updatePosition = (msg: 1 | 0) => {\r\n        setPosition(msg);\r\n    }\r\n\r\n    const updateCurrentUser = (user: string) => {\r\n        setCurrentUser(user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(users)\r\n    }, [users])\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{ currentUser: currentUser, updateCurrentUser, users: users, messages: messages, auth: auth, position: position, updatePosition, updateMessages, updateUsers, updateAuth }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport colors from \"./colors\";\r\n\r\n\r\nexport const Button = styled.button`\r\nbackground-color: ${colors.lightblue};\r\nborder-radius: 15px;\r\nfont-size: 1.4em;\r\npadding: 10px 40px;\r\n\r\n`","import styled from \"styled-components\";\r\nimport colors from \"./colors\";\r\n\r\nexport const TextInput = styled.input`\r\nfont-size: 1.4em;\r\npadding: .5em 1em;\r\nborder-radius: 25px;\r\nborder-width: 2px;\r\nborder-color: ${colors.darkerblue};\r\nwidth: 14em;\r\n`","import React, { useContext, useState } from 'react'\r\nimport { socket } from '../socket/socket';\r\nimport { Button } from '../styled/Button';\r\nimport { FlexDiv } from '../styled/FlexDiv';\r\nimport { StandardText } from '../styled/Text';\r\nimport { TextInput } from '../styled/TextInput';\r\nimport { UserContext } from '../utils/UserContext';\r\n\r\ninterface JoinGameTextsProps {\r\n\r\n}\r\n\r\nexport const JoinGameTexts: React.FC<JoinGameTextsProps> = () => {\r\n\r\n    const {auth, updatePosition, updateCurrentUser} = useContext(UserContext)\r\n    const [name, setName] = useState(\"\")\r\n    const [roomCode, setRoomCode] = useState(\"\")\r\n    const [response, setResponse] = useState(\"\")\r\n\r\n    socket.on(\"game:join:good\", (arg) => {\r\n        setResponse(arg.msg)\r\n        updatePosition(arg.position)\r\n        updateCurrentUser(arg.username)\r\n    })\r\n\r\n        return (\r\n<>\r\n            {!auth ? <> <FlexDiv>\r\n                <TextInput value={name} onChange={(v) => setName(v.target.value)} placeholder=\"your name\"/>\r\n                <Button onClick={(e) => {\r\n                    socket.emit(\"game:join\", {nick: name, room: roomCode})\r\n                }}>Connect</Button>\r\n            </FlexDiv>\r\n                <TextInput value={roomCode} onChange={(v) => setRoomCode(v.target.value)} placeholder=\"room code\"/> </>: null}\r\n                <StandardText>{response}</StandardText>\r\n                </>\r\n        );\r\n}","import styled from \"styled-components\";\r\nimport colors from \"./colors\";\r\n\r\ninterface TileProps {\r\n    line?: boolean;\r\n}\r\n\r\nexport const Tile = styled.button<TileProps>`\r\n    flex: 0.33;\r\n    width: 10em;\r\n    height: 10em;\r\n    background: ${props => !props.line ?colors.lightblue : colors.orange};\r\n    border-radius: 8%;\r\n    border-width: 0;\r\n    box-shadow: 5px 5px 3px grey;\r\n\r\n\r\n    &:hover {\r\n        background: ${props => !props.line ? colors.hoverblue : colors.hoverorange}\r\n    }\r\n\r\n    \r\n    &:active {\r\n        background: ${colors.darkerblue}\r\n    }\r\n\r\n`;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { BsCircle } from \"react-icons/bs\";\r\nimport { Tile } from \"../styled/Tile\";\r\n\r\ninterface SquareProps {\r\n    display: \"x\" | \"o\" | null\r\n    id: number\r\n    press: MouseEventHandler\r\n    isLine: boolean\r\n}\r\n\r\nconst SquareTile: React.FC<SquareProps> = ({ display, id: _, press, isLine }) => {\r\n    return (\r\n            <Tile onClick={press} line={isLine}>\r\n                {display === \"x\" ? (\r\n                    <ImCross size=\"8em\"/>\r\n                ) : display === \"o\" ? (\r\n                    <BsCircle size=\"8em\"/>\r\n                ) : null}\r\n            </Tile>\r\n    );\r\n};\r\n\r\nexport default SquareTile\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { socket } from \"../socket/socket\";\r\nimport { BoardWrapper } from \"../styled/BoardWrapper\";\r\nimport { FlexDiv } from \"../styled/FlexDiv\";\r\nimport { StandardText } from \"../styled/Text\";\r\nimport { UserContext } from \"../utils/UserContext\";\r\nimport { JoinGameTexts } from \"./JoinGameTexts\";\r\nimport SquareTile from \"./square\";\r\n\r\nconst lines = [\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [3, 6, 9],\r\n    [1, 2, 3],\r\n    [4, 5, 6],\r\n    [7, 8, 9],\r\n    [1, 5, 9],\r\n    [3, 5, 7],\r\n];\r\n\r\nexport const Gameboard: React.FC = () => {\r\n    const {position} = useContext(UserContext)\r\n    const [boardState, setBoardState] = useState(Array(10).fill(null));\r\n\r\n    const [turn, setTurn] = useState(\"x\");\r\n\r\n    const [winner, setWinner] = useState<null | string>(null);\r\n\r\n    const [liney, setLiney] = useState<Array<number>>();\r\n\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const [letter, setLetter] = useState<null | \"x\" | \"o\">(null)\r\n\r\n    const checkWin = (board: Array<string | null>) => {\r\n        lines.forEach((line) => {\r\n            if (\r\n                board[line[0]] === board[line[1]] &&\r\n                board[line[1]] === board[line[2]] &&\r\n                board[line[0]] !== null\r\n            ) {\r\n                setWinner(board[line[0]]);\r\n                setPlaying(false)\r\n                setLiney(line);\r\n            } else {\r\n                return;\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkWin(boardState);\r\n    }, [boardState]);\r\n\r\n    const handleClick = (id: number) => {\r\n        // we don't mutate around here -_-\r\n        if (!playing) return;\r\n        if(letter !== turn) return;\r\n        if (winner !== null) return;\r\n        const newState = boardState.slice();\r\n        newState[id] = turn;\r\n        setBoardState(newState);\r\n        setTurn(turn === \"x\" ? \"o\" : \"x\");\r\n        socket.emit(\"clientmove\", {id: id})\r\n    };\r\n\r\n    socket.on(\"game\", (arg) => {\r\n        setPlaying(arg.start);\r\n        setTurn(arg.move);\r\n        setLetter(arg.first === position ? \"x\" : \"o\")\r\n    });\r\n\r\n    socket.on(\"servermove\", arg => {\r\n        setTurn(turn === \"x\" ? \"o\" : \"x\")\r\n        const newState = boardState.slice();\r\n        newState[arg.id] = letter === \"x\" ? \"o\" : \"x\"\r\n        setBoardState(newState)\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {playing ? (\r\n                <StandardText>it is {turn} turn to play, you are {letter}</StandardText>\r\n            ) : winner ? <StandardText>{winner} is the winner!!</StandardText> : null}\r\n            <BoardWrapper>\r\n                {Array.from({ length: 9 }, (_, i) => i + 1).map(\r\n                    (id: number) => {\r\n                        return (\r\n                            <SquareTile\r\n                                isLine={!!liney?.includes(id)}\r\n                                id={id}\r\n                                display={boardState[id]}\r\n                                press={() => {\r\n                                    if (boardState[id] !== null) return;\r\n                                    handleClick(id);\r\n                                }}\r\n                            />\r\n                        );\r\n                    }\r\n                )}\r\n            </BoardWrapper>\r\n            <JoinGameTexts />\r\n            <FlexDiv></FlexDiv>\r\n        </>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.ul`\r\nfont-size: 1em;\r\n`\r\n\r\nexport const UserItem = styled.li`\r\nfont-size: 1em;\r\n`","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { socket } from \"../socket/socket\";\r\nimport { Button } from \"../styled/Button\";\r\nimport { FlexDiv } from \"../styled/FlexDiv\";\r\nimport { StandardText } from \"../styled/Text\";\r\nimport { TextInput } from \"../styled/TextInput\";\r\nimport { UserContext } from \"../utils/UserContext\";\r\n\r\n\r\nconst MessageBox = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    overflow-y: scroll;\r\n    flex-direction: column;\r\n    height: 1vh;\r\n`;\r\n\r\nexport const MessageArea: React.FC = () => {\r\n    const {currentUser} = useContext(UserContext)\r\n    useEffect(() => {\r\n        \r\n    }, [currentUser]);\r\n    const sendMessage = (e: any) => {\r\n        console.log(\"sending message, \", {msg: msg, sender: currentUser})\r\n        e.preventDefault()\r\n                            socket.emit(\"messagesend\", {\r\n                                msg: msg,\r\n                                sender: currentUser,\r\n                            })\r\n                            setMessages([...messages, {msg: msg, sender: currentUser}])\r\n\r\n    }\r\n    const [messages, setMessages] = useState<any>([])\r\n    const [msg, setMsg] = useState(\"\");\r\n    socket.on(\"messagerec\", (arg) => {\r\n        console.log(\"got message\", arg)\r\n        setMessages([...messages, arg])\r\n    });\r\n    if(!currentUser) return null;\r\n    return (\r\n        <>\r\n            <MessageBox>\r\n                <FlexDiv>\r\n                    <form onSubmit={e => sendMessage(e)}>\r\n                    <TextInput\r\n                        style={{ height: \"1.5em\" }}\r\n                        onChange={(v) => setMsg(v.target.value)}\r\n                        onSubmit={sendMessage}\r\n                        value={msg}\r\n                    />\r\n                    <Button onClick={sendMessage} type=\"submit\">\r\nSend\r\n                    </Button>\r\n                    </form>\r\n                </FlexDiv>\r\n                {messages.map((m: { sender: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; msg: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }, id: React.Key | null | undefined) => (\r\n                    <StandardText key={id}>\r\n                        {m.sender}: {m.msg}\r\n                    </StandardText>\r\n                ))}\r\n            </MessageBox>\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext } from 'react'\r\nimport { socket } from '../socket/socket';\r\nimport { UserItem, UserList } from '../styled/Lists';\r\nimport { TitleText } from '../styled/Text';\r\nimport { UserContext } from '../utils/UserContext';\r\nimport { MessageArea } from './MessageArea';\r\n\r\ninterface RightAreaProps {\r\n\r\n}\r\n\r\nexport const RightArea: React.FC<RightAreaProps> = () => {\r\n    const {users, updateUsers, updateAuth} = useContext(UserContext)\r\n\r\n    socket.on(\"game:users:list\", (arg) => {\r\n        console.log(\"joined,\", arg)\r\n        updateAuth(arg.auth)\r\n        updateUsers(arg.list)\r\n    })\r\n\r\n\r\n\r\n        return (<>\r\n            <TitleText>Connected users:</TitleText>\r\n            <UserList>\r\n            {users?.map((u, i)  => {\r\n            return    <UserItem key={i}>{u}</UserItem>\r\n            })}\r\n            </UserList>\r\n            <MessageArea />\r\n            </>\r\n        );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const LayoutColumns = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 1em 5em;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const PageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* padding: 5% 30%; */\r\n    align-content: center;\r\n    justify-content: flex-start;\r\n    padding: 12px\r\n`;\r\n","import React from \"react\";\nimport { Gameboard } from \"./components/Gameboard\";\nimport { RightArea } from \"./components/RightArea\";\nimport { LayoutColumns } from \"./styled/LayoutColumns\";\nimport { PageWrapper } from \"./styled/PageWrapper\";\nimport { TitleText } from \"./styled/Text\";\nimport { UserContextProvider } from \"./utils/UserContext\";\nfunction App() {\n    return (\n        <div className=\"App\">\n          <UserContextProvider>\n            <LayoutColumns>\n                <PageWrapper>\n                    <TitleText>Tic-Tac-Toe</TitleText>\n                    <Gameboard />\n                </PageWrapper>\n                <PageWrapper>\n                  <RightArea />\n                </PageWrapper>\n            </LayoutColumns>\n            </UserContextProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}